From 2d7159dc0719854352c03b2e4f1c9466d467c8c0 Mon Sep 17 00:00:00 2001
From: Thomas Stewart <stewart@schrodinger.com>
Date: Mon, 12 Jul 2021 14:04:12 -0400
Subject: [PATCH] PYMOL-3718 Fix MyPNG crash from MovieSceneStore

---
 layer1/Scene.cpp      | 10 ++++++----
 layer1/Scene.h        |  2 +-
 layer1/SceneDef.h     |  2 +-
 layer3/MovieScene.cpp | 18 +++++++++---------
 4 files changed, 17 insertions(+), 15 deletions(-)

diff --git a/layer1/Scene.cpp b/layer1/Scene.cpp
index 05e60654..fae01f49 100644
--- a/layer1/Scene.cpp
+++ b/layer1/Scene.cpp
@@ -3939,8 +3939,10 @@ static int SceneDeferredImage(DeferredImage * di)
 {
   PyMOLGlobals *G = di->m_G;
   SceneMakeSizedImage(G, di->width, di->height, di->antialias);
-  if(!di->filename.empty() || di->outbuf) {
-    ScenePNG(G, di->filename.c_str(), di->dpi, di->quiet, false, di->format, di->outbuf);
+  if(!di->filename.empty() || di->out_img) {
+    std::vector<unsigned char> outbuf;
+    ScenePNG(G, di->filename.c_str(), di->dpi, di->quiet, false, di->format, &outbuf);
+    di->out_img->setVecData(outbuf);
   } else if(call_raw_image_callback(G)) {
   } else if(G->HaveGUI && SettingGetGlobal_b(G, cSetting_auto_copy_images)) {
 #ifdef _PYMOL_IP_EXTRAS
@@ -3963,7 +3965,7 @@ static int SceneDeferredImage(DeferredImage * di)
  */
 int SceneDeferImage(PyMOLGlobals * G, int width, int height,
                     const char *filename, int antialias, float dpi, int format, int quiet,
-                    png_outbuf_t* outbuf)
+                    pymol::Image* out_img)
 {
   auto di = pymol::make_unique<DeferredImage>(G);
   if(di) {
@@ -3974,7 +3976,7 @@ int SceneDeferImage(PyMOLGlobals * G, int width, int height,
     di->dpi = dpi;
     di->format = format;
     di->quiet = quiet;
-    di->outbuf = outbuf;
+    di->out_img = out_img;
     if(filename){
       di->filename = filename;
     }
diff --git a/layer1/Scene.h b/layer1/Scene.h
index e0ca3f13..c13e5fc4 100644
--- a/layer1/Scene.h
+++ b/layer1/Scene.h
@@ -183,7 +183,7 @@ int SceneDeferClick(Block * block, int button, int x, int y, int mod);
 int SceneDeferDrag(Block * block, int x, int y, int mod);
 int SceneDeferImage(PyMOLGlobals* G, int width, int height,
     const char* filename, int antialias, float dpi, int format, int quiet,
-    png_outbuf_t* outbuf);
+    pymol::Image* out_img);
 const char *SceneGetSeleModeKeyword(PyMOLGlobals * G);
 void SceneUpdateStereo(PyMOLGlobals * G);
 float ScenePushRasterMatrix(PyMOLGlobals * G, float *v);
diff --git a/layer1/SceneDef.h b/layer1/SceneDef.h
index 7ee5499f..b4a11433 100644
--- a/layer1/SceneDef.h
+++ b/layer1/SceneDef.h
@@ -55,7 +55,7 @@ struct DeferredImage : public CDeferred {
   float dpi { 0.0f };
   int entire_window { 0 };
   int format { 0 };
-  png_outbuf_t* outbuf;
+  pymol::Image* out_img;
   DeferredImage(PyMOLGlobals * G) : CDeferred(G){}
 };
 
diff --git a/layer3/MovieScene.cpp b/layer3/MovieScene.cpp
index 2591abbd..d4d5eda0 100644
--- a/layer3/MovieScene.cpp
+++ b/layer3/MovieScene.cpp
@@ -229,15 +229,15 @@ pymol::Result<> MovieSceneStore(PyMOLGlobals * G, const char * name,
   scene.frame = SceneGetFrame(G);
 
   // thumbnail
-  int thumbnail_width = 200;
-  int thumbnail_height = 100;
-  scene.thumbnail = pymol::Image(thumbnail_width, thumbnail_height);
-  png_outbuf_t png_buf;
-  SceneUpdate(G, false); // Make sure scene is on screen
-  SceneDeferImage(G, scene.thumbnail.getWidth(), scene.thumbnail.getHeight(),
-      nullptr, 0, -1, 0, 1, &png_buf);
-  scene.thumbnail.setVecData(png_buf);
-  SceneInvalidate(G); // Used to refresh the screen
+  if (store_thumbnail) {
+    int thumbnail_width = 200;
+    int thumbnail_height = 100;
+    scene.thumbnail = pymol::Image(thumbnail_width, thumbnail_height);
+    SceneUpdate(G, false); // Make sure scene is on screen
+    SceneDeferImage(G, scene.thumbnail.getWidth(), scene.thumbnail.getHeight(),
+        nullptr, 0, -1, 0, 1, &scene.thumbnail);
+    SceneInvalidate(G); // Used to refresh the screen
+  }
 
   // atomdata
   if (store_color || store_rep) {
-- 
2.32.0

